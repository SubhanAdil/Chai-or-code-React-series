import { useState,useEffect,useCallback,useRef } from 'react'


//REACT DEV
function App() {

   let [password,setPassword]= useState("");
   const [length,setLength]=useState(8);
const [number,setNumber]=useState(false);
const [character,setCharacter]=useState(false);





 useEffect(()=>{
 let str = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"
 let pass =""
 if (setNumber) {
  str += "0123456789"
 }
 if (setCharacter) {
  str += "#@!%^&:()"
 }

 // Function to generate a random number
 const generateRandomNumber = () => {
  for (let i = 1; i <=length; i++) {

  let char = Math.floor(Math.random() * str.length + 1); // Generates a random number between 1 and 100
  pass += str.charAt (char);
  }
  //uppercase added by me
  setPassword(pass.toUpperCase());
};

generateRandomNumber();

 }
 ,[setPassword,length,number,character])

 //function for increase range value
 const handleRangeChange = (event) => {
  setLength(parseInt(event.target.value));
};

  // Create a ref to store the reference of the text element
  const textRef = useRef(null);

  // Function to handle text selection
  const handleSelectText = () => {
    if (textRef.current) {
      // Select the text within the text element
      textRef.current.select();
      //just SHURU ki 3 value select kre ga
             //textRef.current.setSelectionRange(0,3);
      // Copy the selected text
      document.execCommand('copy');
        // Remove the selection range after 3 seconds (adjust as needed)
      setTimeout(() => {
        window.getSelection().removeAllRanges();
      }, 300); // 3000 milliseconds = 3 seconds
    }
  };



  

  return (

<div className="w-full max-w-md mx-auto shadow-md rounded-lg px-4 py-3 my-8 bg-gray-800 text-orange-500">
       <h1 className='text-white text-center my-3'>Password generator</h1>
       <div className="flex shadow rounded-lg overflow-hidden mb-4">
         <input 
         ref={textRef}
         type='text'
         //value password is lie rkha agr nh rkha tw text box me password ki value show nh hoti
         value={password}
         placeholder="Password"
         readOnly
         />
         
         <button className='outline-none bg-blue-700 text-white px-3 py-0.5 shrink-0' onClick={handleSelectText}> copy</button>
      
       </div>

  <div className='flex text-sm gap-x-2'>
    
        <div className='flex items-center gap-x-1'>
        <input 
         type='range'
         min={6}
         max={100}
         value={length}
         onChange={ handleRangeChange}
         //onChange={(e)=>{ setLength(e.target.value)}}
         />
        <label>Length: {length}</label>
       </div>

       <div className="flex items-center gap-x-1">
       <input 
       type='checkbox'
        defaultChecked={number}
       onChange={()=>{ setNumber((prev)=>!prev)}}
       />
       <label htmlFor="numberInput">Numbers </label>
       </div>

       <div className="flex items-center gap-x-1">
        <input 
        type='checkbox'
        defaultChecked={character}
        onChange={()=>{ setCharacter((prev)=>!prev)}}
        />
        <label htmlFor="characterInput">Characters</label>
       </div>
  </div>
</div>
  )
}

export default App
